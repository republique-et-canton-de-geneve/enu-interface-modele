<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>ch.ge.ael.enu</groupId>
        <artifactId>maven-parent</artifactId>
        <version>1.1</version>
    </parent>
    <!-- le groupId doit commencer par "ch.ge.etat" afin que le JAR puisse etre pousse sur Maven Central -->
    <artifactId>enu-interface-modele</artifactId>
    <version>1.1.12-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>enu-interface-modele</name>
    <description>Mod√®le objet pour l'API externe de l'ENU</description>
    <url>https://github.com/Espace-numerique-de-l-usager/enu-interface-modele</url>

    <licenses>
        <license>
            <name>AGPL-3.0</name>
            <url>https://www.gnu.org/licenses/agpl-3.0.html</url>
        </license>
    </licenses>

    <scm>
        <!--suppress UnresolvedMavenProperty -->
        <connection>scm:git:${scm.baseurl}/enu-interface-modele.git</connection>
        <!--suppress UnresolvedMavenProperty -->
        <developerConnection>scm:git:${scm.baseurl}/enu-interface-modele.git</developerConnection>
        <!--suppress UnresolvedMavenProperty -->
        <url>${scm.baseurl}/enu-interface-modele.git</url>
        <tag>HEAD</tag>
    </scm>

    <dependencies>
        <!-- Spring Boot deps -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>

        <!-- Jackson -->
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
        </dependency>

        <!-- OpenAPI -->
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-ui</artifactId>
            <version>1.6.11</version>
        </dependency>

        <dependency>
            <groupId>commons-beanutils</groupId>
            <artifactId>commons-beanutils</artifactId>
            <version>1.9.4</version>
        </dependency>

        <!-- Outillage de dev + tests -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <!-- Profil special, pour deployer les JAR sur Maven Central, via OSSRH -->
            <id>maven-central</id>
<!--            <distributionManagement>-->
<!--                <snapshotRepository>-->
<!--                    <id>ossrh</id>-->
<!--                    <url>https://oss.sonatype.org/content/repositories/snapshots</url>-->
<!--                </snapshotRepository>-->
<!--                <repository>-->
<!--                    <id>ossrh</id>-->
<!--                    <url>https://oss.sonatype.org/service/local/staging/deploy/maven2</url>-->
<!--                </repository>-->
<!--            </distributionManagement>-->
            <build>
                <plugins>
                    <!-- Deployer egalement un JAR contenant les sources (exige par Sonatype) -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                        <version>3.2.1</version>
                        <executions>
                            <execution>
                                <id>attach-sources</id>
                                <goals>
                                    <goal>jar-no-fork</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- Deployer egalement un JAR contenant la javadoc (exige par Sonatype) -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <version>3.4.0</version>
                        <configuration>
                            <source>${java.version}</source>
                        </configuration>
                        <executions>
                            <execution>
                                <id>attach-javadocs</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- Signer les livrables via GPG (exige par Sonatype)
                         Ne fonctionne pas en local, uniquement depuis le serveur IC.
                         La valeur de "gpg.keyname" est fournie dans le fichier .m2/settings.xml.
                      -->
<!--                    <plugin>-->
<!--                        <groupId>org.apache.maven.plugins</groupId>-->
<!--                        <artifactId>maven-gpg-plugin</artifactId>-->
<!--                        <version>3.0.1</version>-->
<!--                        <executions>-->
<!--                            <execution>-->
<!--                                <goals>-->
<!--                                    <goal>sign</goal>-->
<!--                                </goals>-->
<!--                                <configuration>-->
<!--                                    &lt;!&ndash;suppress UnresolvedMavenProperty &ndash;&gt;-->
<!--                                    <keyname>${gpg.keyname}</keyname>-->
<!--                                    &lt;!&ndash;suppress UnresolvedMavenProperty &ndash;&gt;-->
<!--                                    <passphraseServerId>${gpg.keyname}</passphraseServerId>-->
<!--                                </configuration>-->
<!--                            </execution>-->
<!--                        </executions>-->
<!--                    </plugin>-->
                    <!-- Ne pas utiliser le plugin maven-deploy-plugin habituel... -->
<!--                    <plugin>-->
<!--                        <groupId>org.apache.maven.plugins</groupId>-->
<!--                        <artifactId>maven-deploy-plugin</artifactId>-->
<!--                        <version>2.8.2</version>-->
<!--                        <configuration>-->
<!--                            <skip>true</skip>-->
<!--                        </configuration>-->
<!--                    </plugin>-->
                    <!-- ... mais utiliser plutot le plugin de Sonatype, qui non seulement deploie sur
                         OSSRH (comme le fait le maven-deploy-plugin), mais en plus fait un close
                         du repository OSSRH et propage le deploiement sur Maven Central...
                      -->
<!--                    <plugin>-->
<!--                        <groupId>org.sonatype.plugins</groupId>-->
<!--                        <artifactId>nexus-staging-maven-plugin</artifactId>-->
<!--                        <version>1.6.11</version>-->
<!--                        <extensions>true</extensions>-->
<!--                        <executions>-->
<!--                            <execution>-->
<!--                                <phase>deploy</phase>-->
<!--                                <goals>-->
<!--                                    <goal>deploy</goal>-->
<!--                                </goals>-->
<!--                            </execution>-->
<!--                        </executions>-->
<!--                        <configuration>-->
<!--                            <serverId>ossrh</serverId>-->
<!--                            <nexusUrl>https://oss.sonatype.org/</nexusUrl>-->
<!--                            <autoReleaseAfterClose>true</autoReleaseAfterClose>-->
<!--                        </configuration>-->
<!--                    </plugin>-->
                    <!-- ... moyennant une configuration aequate du maven-release-plugin : sans le release profile
                         par defaut. Voir https://central.sonatype.org/publish/publish-maven
                      -->
<!--                    <plugin>-->
<!--                        <groupId>org.apache.maven.plugins</groupId>-->
<!--                        <artifactId>maven-release-plugin</artifactId>-->
<!--                        <version>2.5.3</version>-->
<!--                        <configuration>-->
<!--                            <autoVersionSubmodules>true</autoVersionSubmodules>-->
<!--                            <useReleaseProfile>false</useReleaseProfile>-->
<!--                            <releaseProfiles>maven-central</releaseProfiles>-->
<!--                            <goals>deploy</goals>-->
<!--                        </configuration>-->
<!--                    </plugin>-->
                </plugins>
            </build>
        </profile>

    </profiles>

</project>
